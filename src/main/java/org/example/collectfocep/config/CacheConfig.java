package org.example.collectfocep.config;

import org.springframework.cache.CacheManager;
import org.springframework.cache.annotation.EnableCaching;
import org.springframework.cache.concurrent.ConcurrentMapCache;
import org.springframework.cache.support.SimpleCacheManager;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import java.util.Arrays;

/**
 * ðŸ”¥ Configuration des caches - VERSION CORRIGÃ‰E
 * âœ… Inclut TOUS les caches rÃ©fÃ©rencÃ©s dans le code
 */
@Configuration
@EnableCaching
public class CacheConfig {

    @Bean
    public CacheManager cacheManager() {
        SimpleCacheManager cacheManager = new SimpleCacheManager();
        cacheManager.setCaches(Arrays.asList(
                // ================================
                // ðŸ”¥ CACHES EXISTANTS (conservÃ©s)
                // ================================
                new ConcurrentMapCache("clients"),
                new ConcurrentMapCache("collecteurs"),
                new ConcurrentMapCache("comptes"),
                new ConcurrentMapCache("security-permissions"),
                new ConcurrentMapCache("dashboard-data"),
                new ConcurrentMapCache("client-stats"), // ðŸ”¥ CORRIGÃ‰: Ã©tait "client-stafs"
                new ConcurrentMapCache("admin-activities"),
                new ConcurrentMapCache("admin-dashboard"),
                new ConcurrentMapCache("admin-notifications"),
                new ConcurrentMapCache("notifications"),

                // ================================
                // ðŸ”¥ CACHES JOURNAUX (ajoutÃ©s)
                // ================================
                new ConcurrentMapCache("journaux"),
                new ConcurrentMapCache("journal-actuel"),
                new ConcurrentMapCache("monthly-entries"), // ðŸ”¥ CRITIQUE: Cache manquant
                new ConcurrentMapCache("journal-range"),
                new ConcurrentMapCache("journal-collecteur-range"),

                // ================================
                // ðŸ”¥ CACHES MOUVEMENTS (ajoutÃ©s)
                // ================================
                new ConcurrentMapCache("mouvements"),
                new ConcurrentMapCache("mouvement-journal"),
                new ConcurrentMapCache("mouvement-collecteur"),

                // ================================
                // ðŸ”¥ CACHES VERSEMENTS (ajoutÃ©s)
                // ================================
                new ConcurrentMapCache("versements"),
                new ConcurrentMapCache("versement-preview"),
                new ConcurrentMapCache("versement-stats"),

                // ================================
                // ðŸ”¥ CACHES COMPTES AVANCÃ‰S (ajoutÃ©s)
                // ================================
                new ConcurrentMapCache("compte-service"),
                new ConcurrentMapCache("compte-manquant"),
                new ConcurrentMapCache("compte-agence"),
                new ConcurrentMapCache("comptes-collecteur"),

                // ================================
                // ðŸ”¥ CACHES RAPPORTS (ajoutÃ©s)
                // ================================
                new ConcurrentMapCache("rapport-mensuel"),
                new ConcurrentMapCache("rapport-collecteur"),
                new ConcurrentMapCache("rapport-agence"),
                new ConcurrentMapCache("statistiques-globales"),

                // ================================
                // ðŸ”¥ CACHES GÃ‰OLOCALISATION (ajoutÃ©s)
                // ================================
                new ConcurrentMapCache("geocoding-results"),
                new ConcurrentMapCache("client-locations"),
                new ConcurrentMapCache("collecteur-zones"),

                // ================================
                // ðŸ”¥ CACHES AUDIT ET SÃ‰CURITÃ‰ (ajoutÃ©s)
                // ================================
                new ConcurrentMapCache("audit-logs"),
                new ConcurrentMapCache("user-permissions"),
                new ConcurrentMapCache("agence-permissions")
        ));
        return cacheManager;
    }
}